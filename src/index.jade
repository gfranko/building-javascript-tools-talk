doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Building JavaScript Tools

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    // endbuild

  body

    article

      section
        h1 Building JavaScript Tools
        h5 Greg Franko
        hr
        hr
        h6 2/12/2014

      section
        h2 About The Speaker
        hr
        img.profile-pic(src='images/gregfranko.png')
        hr
        h3 <strong>Greg Franko</strong>
        h3 JavaScript Engineer at AddThis
        h3 Open Source Developer
        h3 Author
        h3 Speaker

      section
        h2 What Types of Tools Are We Talking About?

      section
        h1 Static Code Analysis

      section
        h2 What Do These Tools Typically Do?

      section
        h2
          a(href='http://tobyho.com/2013/12/02/fun-with-esprima/', target='_blank') Analyze Code
        h4 Performance, Maintainability, Validation
      section
        h2
          a(href='http://constellation.github.io/escodegen/demo/index.html', target='_blank') Generate Code
        h4 Transpilers, Minifiers, Visualizers

      section
        h2 Could You Provide Some Examples?

      section
        h2
          a(href='http://lisperator.net/uglifyjs/' target='_blank') UglifyJS
        h4 Compressor/Minifier That Reduces The Size Of Your JS Code

      section
        h2
          a(href='http://jshint.com/', target='_blank') JSHint
        h4 Helps Detect Problems In Your JS Code Before It Is Too Late

      section
        h2
          a(href='http://jshint.com/', target='_blank') CSS Lint
        h4 Helps Detect Problems In Your CSS Code Before It Is Too Late

      section
        h2
          a(href='http://coffeescript.org/' target='_blank') CoffeeScript
        h4 Language That Compiles To JavaScript

      section
        h2
          a(href='https://github.com/es-analysis/plato' target='_blank') Plato
        h4 Code Complexity Visualizations

      section
        h2
          a(href='http://requirejs.org/docs/optimization.html', target='_blank') RequireJS Optimizer
        h4 Concatenates AMD Projects Into A Single File

      section
        h2
          a(href='http://gregfranko.com/amdclean/', target='_blank') AMDClean
        h4 Converts AMD code To Standard JavaScript

      section
        h2
          a(href='http://browserify.org/' target='_blank') Browserify
        h4 Concatenates CommonJS Projects Into A Single File For The Browser

      section
        h2 Have You Used A Static Code Analysis Tool?
        h4 You Probably Have

      section
        h2 Have You Written A Static Code Analysis Tool?
        h4 You Probably Haven't

      section
        h1 Why Not?
        ul
          li
          li
            h3 I have a theory...

      section
        h2 You Don't Know Where To Start

      section
        h1 Let's Change That

      section
        h2 Static Code Analysis Basics
        h3 Let's Learn

      section
        h2 It Starts With A String Of Code
        hr
        pre
          code.language-javascript.
            var code = 'function jqcon() {}';

      section
        h2 That Is Converted To An Object
        pre.long-javascript
          code.language-javascript.
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "jqcon"
              },
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": []
              },
              "expression": false
            }

        h4 This Object Is Called an Abstract Syntax Tree (AST)

      section
        h2
          a(href='http://en.wikipedia.org/wiki/Abstract_syntax_tree', target='_blank') Abstract Syntax Tree
        ul
          li
          li
            h3 An Object (Tree) That Represents The Structure Of Your Code
          li
            h3 Does Not Store Everything - It is <strong>abstract</strong>
            h4 e.g. Does not store that a JS function starts/ends with open/close curly brackets
          li
            h3 Can Be Traversed and Updated

      section
        h2 Common AST Questions
        ul
          li
          li
            h3 When Would I Ever Use An AST?
            h4 Whenever you want to analyze your code
          li
            h3 Couldn't I Just Use Regular Expressions?
            h4 Pattern matching will only get you so far. It is also notoriously ugly to read.
          li
            h3 How Do I Generate An AST?
            h4 By Using A Parser Library (or writing your own parser)

      section
        h1 Let's Generate an AST!

      section
        h2
          a(href='http://esprima.org/', target='_blank') Esprima
        ul
          li
          li
            h3 JavaScript Parser That Generates ASTs
          li
            h3 Can Be Used In A Node.js Or Web Environment
          li
            h3 Adheres To The <a href='https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API' target='_blank'>Mozilla SpiderMonkey Parser API</a>
          li
            h3 Created by <a href='https://github.com/ariya' target='_blank'>Ariya Hidayat</a>

      section
        h2 Generating An AST With Esprima
        pre
          code.language-javascript.
            // Node.js Environment
            var code = 'function jqcon() {}',
              esprima = require('esprima'),
              ast = esprima.parse(code);

        h3 That's All There Is To Creating An AST

        a(class='requirebin-link', target='_blank', href='http://requirebin.com/?gist=8939628')
          img(src='images/requirebin_badge.png')

      section
        h1 Awesome, It Works!
        hr
        h3 <strong>ASTs Are So Cool</strong>
        ul
          li
          li
            h3 But I Still Have A Few Questions About Esprima...

      section
        h2 Common Esprima Questions
        ul
          li
          li
            h3 Do I Have To Use Esprima?
            h4 No, there are alternatives out there. A popular alternative is <a href='http://marijnhaverbeke.nl/acorn/' target='_blank'>Acorn</a>
          li
            h3 Why Does Esprima AdHere to the Mozilla SpiderMonkey Parser API?
            h4 Because the SpiderMonkey Parse API is recognized by the community as a standard for structured JS representation (and many other tools adhere to it as well)

      section
        h1 What Now?
        hr
        ul
          li
          li
            h3 Now That We Have Generated Our AST...
          li
            h2 Let's Traverse and Update It!

      section
        h2
          a(href='https://github.com/Constellation/estraverse', target='_blank') Estraverse
        ul
          li
          li
            h3 JavaScript Library That Provides AST Traversal and Update Methods
          li
            h3 Can Be Used In A Node.js Or Web Environment
          li
            h3 Adheres To The <a href='https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API' target='_blank'>Mozilla SpiderMonkey Parser API</a>
          li
            h3 Created by <a href='https://github.com/Constellation' target='_blank'>Yusuke Suzuki</a>

      section
        h2 Traversing An AST With Estraverse
        pre.long-javascript
          code.language-javascript.
            // Node.js Environment
            var code = 'function jqcon() {}',
              esprima = require('esprima'),
              ast = esprima.parse(code),
              estraverse = require('estraverse');

            estraverse.traverse(ast, {
              enter: function (node, parent) {},
              leave: function(node, parent) {}
            });

        a(class='requirebin-link', target='_blank', href='http://requirebin.com/?gist=8941318')
          img(src='images/requirebin_badge.png')

      section
        h2 Traversing And Updating An AST With Estraverse
        pre.long-javascript
          code.language-javascript.
            estraverse.traverse(ast, {
              enter: function (node, parent) {
                if(node.type === 'Identifier' && node.name === 'jqcon') {
                  // Changes the 'jqcon' function name to 'jqcon_is_awesome'
                  node.name = node.name + '_is_awesome';  
                }
              },
            });

        a(class='requirebin-link', target='_blank', href='http://requirebin.com/?gist=8945438')
          img(src='images/requirebin_badge.png')

      section
        h2 You Could Also Use the Estraverse.replace() Method...

      section
        h2 Traversing And Updating An AST With Estraverse
        pre.long-javascript
          code.language-javascript.
            estraverse.replace(ast, {
              enter: function (node, parent) {
                if(node.type === 'Identifier' && node.name === 'jqcon') {
                  // Changes the 'jqcon' function name to 'jqcon_is_awesome'
                  return { 'type': 'Identifier', 'name': 'jqcon_is_awesome' } 
                }
              },
            });

        a(class='requirebin-link', target='_blank', href='http://requirebin.com/?gist=8945281')
          img(src='images/requirebin_badge.png')

      section
        h1 Awesome, It Works!
        hr
        h3 <strong>Traversing and Updating ASTs Is Fun</strong>
        ul
          li
          li
            h3 But I Still Have A Few Questions About Estraverse...

      section
        h2 Common Estraverse Questions
        ul
          li
          li
            h3 Do I Have To Use Estraverse?
            h4 No, there are alternatives out there. A popular alternative is <a href='https://github.com/jrfeenst/esquery' target='_blank'>esquery</a>
          li
            h3 But Couldn't I Traverse And Update The AST Myself?
            h4 You could, but traversing ASTs is tricky since not all AST nodes have the same property names. It is much easier to use a library that has already worked out the kinks.

      section
        h1 Let's Review
        ul
          li
          li
            h3 Use <a href='http://esprima.org/' target='_blank'>Esprima</a> To Generate An AST
          li
            h3 Use <a href='https://github.com/Constellation/estraverse' target='_blank'>Estraverse</a> To Traverse And Update An AST
          li
            h3 <strong>Last but not least...</strong>

      section
        h2 For A Complete Example, Check Out:
        hr
        h2
          a(href='https://github.com/gfranko/amdclean/blob/master/src/amdclean.js', target='_blank') AMDClean Source

      section
        h2 Additional Topics That May Interest You
        hr
        h3 Browserify vs RequireJS
        h3 Using CommonJS syntax with RequireJS
        h3 ES6 Modules and The Future

      section
        h1 Thanks!
        hr
        h3
          <strong>Twitter: </strong><a href='https://twitter.com/GregFranko' target='_blank'>GregFranko</a>
        h3
          <strong>Github: </strong><a href='https://github.com/gfranko' target='_blank'>gfranko</a>

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild